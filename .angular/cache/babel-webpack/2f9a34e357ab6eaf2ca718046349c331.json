{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let BlogsService = /*#__PURE__*/(() => {\n  class BlogsService {\n    constructor(httpClient, router) {\n      this.httpClient = httpClient;\n      this.router = router;\n    }\n\n    getBlogs() {\n      const token = sessionStorage.getItem('token');\n      const headers = new HttpHeaders({\n        Authorization: 'Basic ' + token\n      });\n      return this.httpClient.get('http://localhost:8888/bloglist/getBlog', {\n        headers\n      });\n    }\n\n    getBlogsById(blogid) {\n      const token = sessionStorage.getItem('token');\n      const headers = new HttpHeaders({\n        Authorization: 'Basic ' + token\n      });\n      return this.httpClient.get('http://localhost:8888/bloglist/getBlog/' + blogid, {\n        headers\n      });\n    }\n\n    getBlogsByBlogname(blogname) {\n      const token = sessionStorage.getItem('token');\n      const headers = new HttpHeaders({\n        Authorization: 'Basic ' + token\n      });\n      return this.httpClient.get('http://localhost:8888/bloglist/getBlogByName/' + blogname, {\n        headers\n      });\n    }\n\n    addBlogs(data) {\n      console.log(data);\n      const token = sessionStorage.getItem('token');\n      const headers = new HttpHeaders({\n        Authorization: 'Basic ' + token\n      });\n      return this.httpClient.post('http://localhost:8888/bloglist/addBlog', data, {\n        headers\n      });\n    }\n\n    updateBlog(id, bdata) {\n      const token = sessionStorage.getItem('token');\n      const headers = new HttpHeaders({\n        Authorization: 'Basic ' + token\n      });\n      return this.httpClient.put('http://localhost:8888/bloglist/updateBlog/' + id, bdata, {\n        headers\n      });\n    }\n\n    getBlogsByCategory(category) {\n      const token = sessionStorage.getItem('token');\n      const headers = new HttpHeaders({\n        Authorization: 'Basic ' + token\n      });\n      return this.httpClient.get('http://localhost:8888/bloglist/getBlogByCategory/' + category, {\n        headers\n      });\n    }\n\n    removeBlogs(blogid) {\n      const token = sessionStorage.getItem('token');\n      const headers = new HttpHeaders({\n        Authorization: 'Basic ' + token\n      });\n      return this.httpClient.get('http://localhost:8888/blogfeed/removeFeedBlog/receive/' + blogid, {\n        headers\n      });\n    }\n\n    deleteBlog(blogid) {\n      const token = sessionStorage.getItem('token');\n      const headers = new HttpHeaders({\n        Authorization: 'Basic ' + token\n      });\n      return this.httpClient.delete('http://localhost:8888/bloglist/deleteBlog/' + blogid, {\n        headers\n      });\n    }\n\n  }\n\n  BlogsService.ɵfac = function BlogsService_Factory(t) {\n    return new (t || BlogsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  BlogsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlogsService,\n    factory: BlogsService.ɵfac,\n    providedIn: 'root'\n  });\n  return BlogsService;\n})();","map":null,"metadata":{},"sourceType":"module"}